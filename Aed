Aed Project:
criar class de Menus e coloca la como atributo do Aeroporto;

substituir todo este estilo de codigo:
    cin >> CC;
    while (cin.fail())
    {
        cout << "Input invalido, insira novamente!" << endl;
        cin.clear();
        cin.ignore(1000, '\n');
        cin >> CC;
    }
por um metodo que retorne o input;

Diz que deve haver a possiblidade de listagem por critérios a definir pelo utilizador.

Utilizar algoritmos de pesquisa e ordenação 

cout << "Deseja alterar algum aviao?" << endl;
        cout << "1) Sim" << endl;
        cout << "0) Nao" << endl;
        int inputAlterarAviao;
        cin >> inputAlterarAviao;
        while ( inputAlterarAviao != 0 && inputAlterarAviao != 1 || cin.fail())
        {
            cout << "Input invalido, insira novamente!" << endl;
            cout << "Deseja alterar algum aviao?" << endl;
            cout << "1) Sim" << endl;
            cout << "0) Nao" << endl;   
            cin.clear(););
            cin >> inputAlterarAviao;
        }
            cin.ignore(1000, '\n'

Listagens:
Mostrar avioes;(Capacidade,Matricula)
Mostrar voos;(numVoo,dataPartida, duracaoVoo,origem, destino)
Mostrar servicosCompletos;(tipoServiço, data, funcResponsavel)

Ordenar ordem reversa

A fazer:
ver carruagens/carrinho
    Associar carrinho a um voo.
    Pedir carruagens linhas colunas na criacao do Voo.
    Quando pede bagagem automatica verificar se ainda tem espaço no carrinho;
transportesTerrestre bst mostrar por escolha
implementar algoritmo de ordenacao 
doxygen
apresentação

Aeroporto:
    1) Avioes
    2) Transportes Terrestres
    0) Exit

Transportes Terrestres:
    Ver transportes:
        horario
        distancia
        tipo
    Adicionar Transporte
    Remover Transporte

Ver voo aceita quando nao ha voos e nao tem voltar para tras
         